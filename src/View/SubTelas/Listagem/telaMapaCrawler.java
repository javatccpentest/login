/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.SubTelas.Listagem;

import Model.pasta;
import View.Componentes.JTree.TreeRenderer;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author q216-12
 */
public class telaMapaCrawler extends javax.swing.JInternalFrame {

    private List<String> lista;
    private List<String> lista_dir;
    private String dom;
    private pasta PastaRoot;

    /**
     * Creates new form telaMapaCrawler
     */
    public telaMapaCrawler(List lista, String dominio) {
        this.lista = tratarLista(lista);
        this.dom = dominio;
        PastaRoot = new pasta(this.dom);
        initComponents();
    }

    public telaMapaCrawler(List dir, List lista, String dominio) {
        this.lista = tratarLista(lista);
        this.lista_dir = tratarLista(dir);
        this.dom = dominio;
        PastaRoot = new pasta(this.dom);
        initComponents();
    }

    private List<String> tratarLista(List l) {

        ArrayList<String> s = new ArrayList<>();

        for (int i = 0; i < l.size(); i++) {
            String replace = l.get(i).toString().replace("https://", "");
            replace = replace.replace("http://", "");
            s.add(replace);
        }

        return s;
    }

    private DefaultTreeModel setModel() {
        if (lista_dir == null) {
            ArrayList<String[]> array_filtrado = new ArrayList<>();

            for (String s : lista) {
                if (!s.equals(this.dom)) {
                    array_filtrado.add(s.split("/"));
                }
            }

            for (String[] strings : array_filtrado) {

                pasta pasta_nova = new pasta(strings[0]);
                pasta_nova = add(pasta_nova, PastaRoot);

                for (int i = 1; i < strings.length; i++) {

                    pasta pasta_nova_aux = new pasta(strings[i]);
                    pasta_nova = add(pasta_nova_aux, pasta_nova);

                }

            }

            return new DefaultTreeModel(PastaRoot.getNode());
        }

        ArrayList<String[]> array_filtrado = new ArrayList<>();

        for (String s : lista_dir) {
            if (!s.equals(this.dom)) {
                array_filtrado.add(s.split("/"));
            }
        }

        for (String[] strings : array_filtrado) {

            pasta pasta_nova = new pasta(strings[0],0);
            pasta_nova = add(pasta_nova, PastaRoot);

            for (int i = 1; i < strings.length; i++) {

                pasta pasta_nova_aux = new pasta(strings[i],0);
                pasta_nova = add(pasta_nova_aux, pasta_nova);

            }

        }

        ArrayList<String[]> array_filtrado_ = new ArrayList<>();

        for (String s : lista) {
            if (!s.equals(this.dom)) {
                array_filtrado_.add(s.split("/"));
            }
        }

        for (String[] strings : array_filtrado_) {

            pasta pasta_nova = new pasta(strings[0]);
            pasta_nova = add(pasta_nova, PastaRoot);

            for (int i = 1; i < strings.length; i++) {

                pasta pasta_nova_aux = new pasta(strings[i]);
                pasta_nova = add(pasta_nova_aux, pasta_nova);

            }

        }

        return new DefaultTreeModel(PastaRoot.getNode());
    }

    private pasta add(pasta pasta_nova, pasta pasta_root) {
        int aux = 0;

        for (pasta sub_pasta_root : pasta_root.getPastas()) {

            if (sub_pasta_root.getNome().equals(pasta_nova.getNome())) {

                return sub_pasta_root;

            }

        }
        if (pasta_root.getNome().equals(pasta_nova.getNome())) {
            return pasta_root;
        }

        if (aux == 0) {
            pasta_root.getPastas().add(pasta_nova);
            pasta_root.getNode().add(pasta_nova.getNode());
        }

        return pasta_nova;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jLabel1 = new javax.swing.JLabel();
        edtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        edtTamanho = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        edtCaminho = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblImagem = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        tree.setModel(setModel());
        tree.setCellRenderer(new TreeRenderer());
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                treeMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        jLabel1.setText("Nome");

        edtNome.setEditable(false);

        jLabel2.setText("Tamanho");

        edtTamanho.setEditable(false);

        jLabel3.setText("Caminho");

        edtCaminho.setEditable(false);

        lblImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jScrollPane2.setViewportView(lblImagem);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtNome))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtTamanho, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edtCaminho))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(edtCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(edtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(edtTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void treeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMousePressed
        if (tree.getSelectionRows().length == 1) {
            Object[] selectionPath = tree.getSelectionPath().getPath();
//            System.out.println(selectionPath[selectionPath.length-1]);
//            System.out.println(Arrays.toString(selectionPath));
            edtNome.setText(selectionPath[selectionPath.length - 1].toString());
            String StringUrl = "http:/";
            for (Object object : selectionPath) {
                StringUrl += "/" + object.toString();
            }
            edtCaminho.setText(StringUrl);
            try {
                URL url = new URL(StringUrl);
                HttpURLConnection con = (HttpURLConnection) url.openConnection();
                edtTamanho.setText(con.getHeaderField("Content-Length"));
                //edtData.setValue(new Date(con.getHeaderField("Date")));
                ImageIcon imic = new ImageIcon(url);
                lblImagem.setIcon(imic);

            } catch (MalformedURLException ex) {
                ex.printStackTrace();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_treeMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField edtCaminho;
    private javax.swing.JTextField edtNome;
    private javax.swing.JTextField edtTamanho;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblImagem;
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables
}
